name: .NET Build

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    env:
      VERSION: 7.0.${{ github.run_number }}
      PROJECT: RichardSzalay.MockHttp.sln

    steps:
    
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
          
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT }}
      
      - name: Version Visual Studio SDK projects
        uses: roryprimrose/set-vs-sdk-project-version@v1.0.6
        with:
          # The wildcard filter that identifies projects to version
          projectFilter: "**/*.csproj"
          # Maps to the Version element
          version: ${{ env.VERSION }}
          # Maps to the AssemblyVersion element
          assemblyVersion: ${{ env.VERSION }}
          # Maps to the FileVersion element
          fileVersion: ${{ env.VERSION }}
          # Maps to the InformationalVersion element
          informationalVersion: ${{ env.VERSION }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory
          dotnet tool update -g dotnet-sonarscanner --tool-path ./.sonar/scanner
          dotnet tool update -g dotnet-reportgenerator-globaltool --tool-path ./.sonar/scanner
          dotnet tool update -g dotnet-coverage --tool-path ./.sonar/scanner
            
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"lk-code_mockhttp" /o:"lk-code-github" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --configuration Release --no-restore -p:PackageVersion=${{ env.VERSION }} ${{ env.PROJECT }}
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          reportgenerator "-reports:coverage.xml" "-targetdir:sonarqubecoverage" "-reporttypes:SonarQube"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Set Version Git Tag
        run: |
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}
          
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ env.VERSION }}
          path: "**/*.nupkg"

